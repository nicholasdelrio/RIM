package edu.utep.cybershare.rim.ontology;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: Institution <br>
 * @version generated on Mon Jun 09 10:57:54 GMT-07:00 2014 by nick
 */

public interface Institution extends WrappedIndividual {

    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/RIM/rim.owl#hasAddress
     */
     
    /**
     * Gets all property values for the hasAddress property.<p>
     * 
     * @returns a collection of values for the hasAddress property.
     */
    Collection<? extends String> getHasAddress();

    /**
     * Checks if the class has a hasAddress property value.<p>
     * 
     * @return true if there is a hasAddress property value.
     */
    boolean hasHasAddress();

    /**
     * Adds a hasAddress property value.<p>
     * 
     * @param newHasAddress the hasAddress property value to be added
     */
    void addHasAddress(String newHasAddress);

    /**
     * Removes a hasAddress property value.<p>
     * 
     * @param oldHasAddress the hasAddress property value to be removed.
     */
    void removeHasAddress(String oldHasAddress);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/RIM/rim.owl#hasCity
     */
     
    /**
     * Gets all property values for the hasCity property.<p>
     * 
     * @returns a collection of values for the hasCity property.
     */
    Collection<? extends String> getHasCity();

    /**
     * Checks if the class has a hasCity property value.<p>
     * 
     * @return true if there is a hasCity property value.
     */
    boolean hasHasCity();

    /**
     * Adds a hasCity property value.<p>
     * 
     * @param newHasCity the hasCity property value to be added
     */
    void addHasCity(String newHasCity);

    /**
     * Removes a hasCity property value.<p>
     * 
     * @param oldHasCity the hasCity property value to be removed.
     */
    void removeHasCity(String oldHasCity);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/RIM/rim.owl#hasInstitutionHomePage
     */
     
    /**
     * Gets all property values for the hasInstitutionHomePage property.<p>
     * 
     * @returns a collection of values for the hasInstitutionHomePage property.
     */
    Collection<? extends Object> getHasInstitutionHomePage();

    /**
     * Checks if the class has a hasInstitutionHomePage property value.<p>
     * 
     * @return true if there is a hasInstitutionHomePage property value.
     */
    boolean hasHasInstitutionHomePage();

    /**
     * Adds a hasInstitutionHomePage property value.<p>
     * 
     * @param newHasInstitutionHomePage the hasInstitutionHomePage property value to be added
     */
    void addHasInstitutionHomePage(Object newHasInstitutionHomePage);

    /**
     * Removes a hasInstitutionHomePage property value.<p>
     * 
     * @param oldHasInstitutionHomePage the hasInstitutionHomePage property value to be removed.
     */
    void removeHasInstitutionHomePage(Object oldHasInstitutionHomePage);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/RIM/rim.owl#hasInstitutionName
     */
     
    /**
     * Gets all property values for the hasInstitutionName property.<p>
     * 
     * @returns a collection of values for the hasInstitutionName property.
     */
    Collection<? extends String> getHasInstitutionName();

    /**
     * Checks if the class has a hasInstitutionName property value.<p>
     * 
     * @return true if there is a hasInstitutionName property value.
     */
    boolean hasHasInstitutionName();

    /**
     * Adds a hasInstitutionName property value.<p>
     * 
     * @param newHasInstitutionName the hasInstitutionName property value to be added
     */
    void addHasInstitutionName(String newHasInstitutionName);

    /**
     * Removes a hasInstitutionName property value.<p>
     * 
     * @param oldHasInstitutionName the hasInstitutionName property value to be removed.
     */
    void removeHasInstitutionName(String oldHasInstitutionName);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/RIM/rim.owl#hasLatitude
     */
     
    /**
     * Gets all property values for the hasLatitude property.<p>
     * 
     * @returns a collection of values for the hasLatitude property.
     */
    Collection<? extends Object> getHasLatitude();

    /**
     * Checks if the class has a hasLatitude property value.<p>
     * 
     * @return true if there is a hasLatitude property value.
     */
    boolean hasHasLatitude();

    /**
     * Adds a hasLatitude property value.<p>
     * 
     * @param newHasLatitude the hasLatitude property value to be added
     */
    void addHasLatitude(Object newHasLatitude);

    /**
     * Removes a hasLatitude property value.<p>
     * 
     * @param oldHasLatitude the hasLatitude property value to be removed.
     */
    void removeHasLatitude(Object oldHasLatitude);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/RIM/rim.owl#hasLongitude
     */
     
    /**
     * Gets all property values for the hasLongitude property.<p>
     * 
     * @returns a collection of values for the hasLongitude property.
     */
    Collection<? extends Object> getHasLongitude();

    /**
     * Checks if the class has a hasLongitude property value.<p>
     * 
     * @return true if there is a hasLongitude property value.
     */
    boolean hasHasLongitude();

    /**
     * Adds a hasLongitude property value.<p>
     * 
     * @param newHasLongitude the hasLongitude property value to be added
     */
    void addHasLongitude(Object newHasLongitude);

    /**
     * Removes a hasLongitude property value.<p>
     * 
     * @param oldHasLongitude the hasLongitude property value to be removed.
     */
    void removeHasLongitude(Object oldHasLongitude);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/RIM/rim.owl#hasState
     */
     
    /**
     * Gets all property values for the hasState property.<p>
     * 
     * @returns a collection of values for the hasState property.
     */
    Collection<? extends String> getHasState();

    /**
     * Checks if the class has a hasState property value.<p>
     * 
     * @return true if there is a hasState property value.
     */
    boolean hasHasState();

    /**
     * Adds a hasState property value.<p>
     * 
     * @param newHasState the hasState property value to be added
     */
    void addHasState(String newHasState);

    /**
     * Removes a hasState property value.<p>
     * 
     * @param oldHasState the hasState property value to be removed.
     */
    void removeHasState(String oldHasState);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/RIM/rim.owl#hasZipCode
     */
     
    /**
     * Gets all property values for the hasZipCode property.<p>
     * 
     * @returns a collection of values for the hasZipCode property.
     */
    Collection<? extends String> getHasZipCode();

    /**
     * Checks if the class has a hasZipCode property value.<p>
     * 
     * @return true if there is a hasZipCode property value.
     */
    boolean hasHasZipCode();

    /**
     * Adds a hasZipCode property value.<p>
     * 
     * @param newHasZipCode the hasZipCode property value to be added
     */
    void addHasZipCode(String newHasZipCode);

    /**
     * Removes a hasZipCode property value.<p>
     * 
     * @param oldHasZipCode the hasZipCode property value to be removed.
     */
    void removeHasZipCode(String oldHasZipCode);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
